name: Create Release

on:
  push:
    branches:
      - master
    paths:
      - db/**

jobs:
  create_release:
    name: Create a latest release when update db
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the root directory
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create db file
        run: python create_release.py

      - name: Get release info
        id: get_release_info
        run: |
          version=$( cat ${{ github.workspace }}/version | sed 's/-/_/' )
          echo "::set-output name=version::${version}"

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_release_info.outputs.version }}
          release_name: ${{ steps.get_release_info.outputs.version }}
          body_path: ${{ github.workspace }}/change_log/latest.md
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/ali_avd_db_${{ steps.get_release_info.outputs.version }}.zip
          asset_name: ali_avd_db_${{ steps.get_release_info.outputs.version }}.zip
          asset_content_type: application/zip
